import TelegramBot from 'node-telegram-bot-api'
import axios from 'axios'
import fs from 'fs'
import path from 'path'
import { fileURLToPath } from 'url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '7762390260:AAHBTsEZXFl1VL200pZO54qicwuEKomhnYY'
const ADMIN_ID = process.env.ADMIN_TELEGRAM_ID || '1119283257'
const API_BASE_URL = process.env.BACKEND_URL || 'http://localhost:5000'

// –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
const bot = new TelegramBot(BOT_TOKEN, { polling: true })

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω
console.log('üîç Verification Bot starting...')
console.log(`üì± Admin ID: ${ADMIN_ID}`)

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
  console.error('‚ùå Verification Bot error:', error)
})

bot.on('polling_error', (error) => {
  console.error('‚ùå Verification Bot polling error:', error)
})

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id
  
  if (chatId.toString() !== ADMIN_ID) {
    bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.')
    return
  }
  
  const welcomeMessage = `
üîç *KissBlow Verification Bot*

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–π –ø—Ä–æ—Ñ–∏–ª–µ–π.

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/verifications - –ü–æ–∫–∞–∑–∞—Ç—å –æ–∂–∏–¥–∞—é—â–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
/help - –ü–æ–º–æ—â—å

*–§—É–Ω–∫—Ü–∏–∏:*
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
‚Ä¢ –û–¥–æ–±—Ä–µ–Ω–∏–µ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∏ —Ñ–æ—Ç–æ —Å –∫–æ–¥–æ–º
  `
  
  bot.sendMessage(chatId, welcomeMessage, { parse_mode: 'Markdown' })
})

// –ö–æ–º–∞–Ω–¥–∞ /verifications
bot.onText(/\/verifications/, async (msg) => {
  const chatId = msg.chat.id
  
  if (chatId.toString() !== ADMIN_ID) {
    bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.')
    return
  }
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–π
    const response = await axios.get(`${API_BASE_URL}/api/admin/verifications`, {
      headers: {
        'X-Admin-Key': process.env.ADMIN_API_KEY || 'kissblow-admin-2024-verification-bot-key-12345'
      }
    })
    const verifications = response.data
    
    if (verifications.length === 0) {
      bot.sendMessage(chatId, '‚úÖ –ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–π')
      return
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    for (const verification of verifications) {
      const message = `
üîç *VERIFICATION REQUEST #${verification.id}*
üë§ ${verification.name}, ${verification.age}, ${verification.city}
üìÖ ${new Date(verification.created_at).toLocaleString('ru-RU')}
üî¢ –ö–æ–¥: *${verification.verification_code}*

üì∏ *Profile Photo:*
${verification.image_url ? `${API_BASE_URL}${verification.image_url}` : '–ù–µ—Ç —Ñ–æ—Ç–æ'}

üì∏ *Verification Photo:*
${verification.verification_photo_url ? `${API_BASE_URL}${verification.verification_photo_url}` : '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'}

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${verification.user_email}
      `
      
      const keyboard = {
        inline_keyboard: [
          [
            { text: '‚úÖ Approve', callback_data: `verify_approve_${verification.id}` },
            { text: '‚ùå Reject', callback_data: `verify_reject_${verification.id}` }
          ]
        ]
      }
      
      bot.sendMessage(chatId, message, { 
        parse_mode: 'Markdown',
        reply_markup: keyboard
      })
    }
    
  } catch (error) {
    console.error('Verifications error:', error)
    bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–π: ${error.message}`)
  }
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
bot.on('callback_query', async (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id
  const data = callbackQuery.data
  
  if (chatId.toString() !== ADMIN_ID) {
    bot.answerCallbackQuery(callbackQuery.id, { text: '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞' })
    return
  }
  
  try {
    if (data.startsWith('verify_approve_')) {
      const verificationId = data.replace('verify_approve_', '')
      
      await axios.post(`${API_BASE_URL}/api/admin/verifications/${verificationId}/approve`, {}, {
        headers: {
          'X-Admin-Key': process.env.ADMIN_API_KEY || 'kissblow-admin-2024-verification-bot-key-12345'
        }
      })
      
      bot.answerCallbackQuery(callbackQuery.id, { text: '‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–¥–æ–±—Ä–µ–Ω–∞!' })
      bot.editMessageText(
        `‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è #${verificationId} –æ–¥–æ–±—Ä–µ–Ω–∞!`,
        { 
          chat_id: chatId, 
          message_id: callbackQuery.message.message_id 
        }
      )
      
    } else if (data.startsWith('verify_reject_')) {
      const verificationId = data.replace('verify_reject_', '')
      
      await axios.post(`${API_BASE_URL}/api/admin/verifications/${verificationId}/reject`, {}, {
        headers: {
          'X-Admin-Key': process.env.ADMIN_API_KEY || 'kissblow-admin-2024-verification-bot-key-12345'
        }
      })
      
      bot.answerCallbackQuery(callbackQuery.id, { text: '‚ùå –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!' })
      bot.editMessageText(
        `‚ùå –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è #${verificationId} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!`,
        { 
          chat_id: chatId, 
          message_id: callbackQuery.message.message_id 
        }
      )
    }
  } catch (error) {
    console.error('Callback error:', error)
    bot.answerCallbackQuery(callbackQuery.id, { text: '‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏' })
  }
})

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id
  
  if (chatId.toString() !== ADMIN_ID) {
    bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.')
    return
  }
  
  const helpMessage = `
üÜò *–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏*

/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
/verifications - –ü–æ–∫–∞–∑–∞—Ç—å –æ–∂–∏–¥–∞—é—â–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

*–ü—Ä–æ—Ü–µ—Å—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏:*
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–∫–∏ —Å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∏ —Ñ–æ—Ç–æ —Å –∫–æ–¥–æ–º
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ —Ñ–æ—Ç–æ —Å –∫–æ–¥–æ–º –≤ –∑–∞—è–≤–∫–µ
‚Ä¢ –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è

*–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:*
‚Ä¢ –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
‚Ä¢ –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è
‚Ä¢ –§–æ—Ç–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  `
  
  bot.sendMessage(chatId, helpMessage, { parse_mode: 'Markdown' })
})

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
bot.sendMessage(ADMIN_ID, 'üîç KissBlow Verification Bot –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.')

console.log('‚úÖ Verification Bot started successfully!')
